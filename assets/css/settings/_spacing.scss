$spacer-small:2rem !default;
$spacer-medum:4rem !default;
$spacer-large:6rem !default;

$spacings:(
  null:$spacer-small,
  'xs':$spacer-small,
  'm': $spacer-medum,
  'l': $spacer-large,
) !default;

// create spacing

@mixin spacing($spacing:null,$type:'padding',$top:true,$right:true,$bottom:true,$left:true) {
  @if ($spacing == null) {
    @warn"No spacing value passed as parameter";
  }
  @else  {

    #{$type}:$spacing;

    @if($top == false){
      #{$type}-top: 0;
    }

    @if($right == false){
      #{$type}-right: 0;
    }

    @if($bottom == false){
      #{$type}-bottom: 0;
    }

    @if($left == false){
      #{$type}-left: 0;
    }

  }
}

// create spacing

@mixin add-spacing($top:true,$right:true,$bottom:true,$left:true,$type:'padding',$spacings:$spacings,$breakpoints:$breakpoints){
  @each $name, $value in $spacings {

    $map-existance: map-has-key($breakpoints,#{$name});

    @if ($map-existance) {
      @include from(#{$name}){
        @include spacing(#{$value},$type,$top,$right,$bottom,$left);
      }
    } @else if ($name == null){
      @include spacing(#{$value},$type,$top,$right,$bottom,$left);
    }

  }
}
